// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClusterCloudProviderNodeStatus cluster cloud provider node status
// swagger:model ClusterCloudProviderNodeStatus
type ClusterCloudProviderNodeStatus string

const (

	// ClusterCloudProviderNodeStatusNotEnabledOnSubscription captures enum value "NotEnabledOnSubscription"
	ClusterCloudProviderNodeStatusNotEnabledOnSubscription ClusterCloudProviderNodeStatus = "NotEnabledOnSubscription"

	// ClusterCloudProviderNodeStatusNotAvailableInRegion captures enum value "NotAvailableInRegion"
	ClusterCloudProviderNodeStatusNotAvailableInRegion ClusterCloudProviderNodeStatus = "NotAvailableInRegion"
)

// for schema
var clusterCloudProviderNodeStatusEnum []interface{}

func init() {
	var res []ClusterCloudProviderNodeStatus
	if err := json.Unmarshal([]byte(`["NotEnabledOnSubscription","NotAvailableInRegion"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterCloudProviderNodeStatusEnum = append(clusterCloudProviderNodeStatusEnum, v)
	}
}

func (m ClusterCloudProviderNodeStatus) validateClusterCloudProviderNodeStatusEnum(path, location string, value ClusterCloudProviderNodeStatus) error {
	if err := validate.Enum(path, location, value, clusterCloudProviderNodeStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster cloud provider node status
func (m ClusterCloudProviderNodeStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterCloudProviderNodeStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
