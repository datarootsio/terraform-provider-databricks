// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SparkNode spark node
// swagger:model SparkNode
type SparkNode struct {

	// host private ip
	HostPrivateIP string `json:"host_private_ip,omitempty"`

	// instance id
	InstanceID string `json:"instance_id,omitempty"`

	// node aws attributes
	NodeAwsAttributes *SparkNodeAwsAttributes `json:"node_aws_attributes,omitempty"`

	// node id
	NodeID string `json:"node_id,omitempty"`

	// private ip
	PrivateIP string `json:"private_ip,omitempty"`

	// public dns
	PublicDNS string `json:"public_dns,omitempty"`

	// start timestamp
	StartTimestamp int64 `json:"start_timestamp,omitempty"`
}

// Validate validates this spark node
func (m *SparkNode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNodeAwsAttributes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SparkNode) validateNodeAwsAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.NodeAwsAttributes) { // not required
		return nil
	}

	if m.NodeAwsAttributes != nil {
		if err := m.NodeAwsAttributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("node_aws_attributes")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SparkNode) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SparkNode) UnmarshalBinary(b []byte) error {
	var res SparkNode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
