// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ErrorCode error code
// swagger:model ErrorCode
type ErrorCode string

const (

	// ErrorCodeBADREQUEST captures enum value "BAD_REQUEST"
	ErrorCodeBADREQUEST ErrorCode = "BAD_REQUEST"

	// ErrorCodeCOULDNOTACQUIRELOCK captures enum value "COULD_NOT_ACQUIRE_LOCK"
	ErrorCodeCOULDNOTACQUIRELOCK ErrorCode = "COULD_NOT_ACQUIRE_LOCK"

	// ErrorCodeCUSTOMERUNAUTHORIZED captures enum value "CUSTOMER_UNAUTHORIZED"
	ErrorCodeCUSTOMERUNAUTHORIZED ErrorCode = "CUSTOMER_UNAUTHORIZED"

	// ErrorCodeDIRECTORYNOTEMPTY captures enum value "DIRECTORY_NOT_EMPTY"
	ErrorCodeDIRECTORYNOTEMPTY ErrorCode = "DIRECTORY_NOT_EMPTY"

	// ErrorCodeDIRECTORYPROTECTED captures enum value "DIRECTORY_PROTECTED"
	ErrorCodeDIRECTORYPROTECTED ErrorCode = "DIRECTORY_PROTECTED"

	// ErrorCodeDRYRUNFAILED captures enum value "DRY_RUN_FAILED"
	ErrorCodeDRYRUNFAILED ErrorCode = "DRY_RUN_FAILED"

	// ErrorCodeENDPOINTNOTFOUND captures enum value "ENDPOINT_NOT_FOUND"
	ErrorCodeENDPOINTNOTFOUND ErrorCode = "ENDPOINT_NOT_FOUND"

	// ErrorCodeFEATUREDISABLED captures enum value "FEATURE_DISABLED"
	ErrorCodeFEATUREDISABLED ErrorCode = "FEATURE_DISABLED"

	// ErrorCodeINTERNALERROR captures enum value "INTERNAL_ERROR"
	ErrorCodeINTERNALERROR ErrorCode = "INTERNAL_ERROR"

	// ErrorCodeINVALIDPARAMETERVALUE captures enum value "INVALID_PARAMETER_VALUE"
	ErrorCodeINVALIDPARAMETERVALUE ErrorCode = "INVALID_PARAMETER_VALUE"

	// ErrorCodeINVALIDSTATE captures enum value "INVALID_STATE"
	ErrorCodeINVALIDSTATE ErrorCode = "INVALID_STATE"

	// ErrorCodeINVALIDSTATETRANSITION captures enum value "INVALID_STATE_TRANSITION"
	ErrorCodeINVALIDSTATETRANSITION ErrorCode = "INVALID_STATE_TRANSITION"

	// ErrorCodeIOERROR captures enum value "IO_ERROR"
	ErrorCodeIOERROR ErrorCode = "IO_ERROR"

	// ErrorCodeMALFORMEDREQUEST captures enum value "MALFORMED_REQUEST"
	ErrorCodeMALFORMEDREQUEST ErrorCode = "MALFORMED_REQUEST"

	// ErrorCodeMAXBLOCKSIZEEXCEEDED captures enum value "MAX_BLOCK_SIZE_EXCEEDED"
	ErrorCodeMAXBLOCKSIZEEXCEEDED ErrorCode = "MAX_BLOCK_SIZE_EXCEEDED"

	// ErrorCodeMAXNOTEBOOKSIZEEXCEEDED captures enum value "MAX_NOTEBOOK_SIZE_EXCEEDED"
	ErrorCodeMAXNOTEBOOKSIZEEXCEEDED ErrorCode = "MAX_NOTEBOOK_SIZE_EXCEEDED"

	// ErrorCodeMAXREADSIZEEXCEEDED captures enum value "MAX_READ_SIZE_EXCEEDED"
	ErrorCodeMAXREADSIZEEXCEEDED ErrorCode = "MAX_READ_SIZE_EXCEEDED"

	// ErrorCodePERMISSIONDENIED captures enum value "PERMISSION_DENIED"
	ErrorCodePERMISSIONDENIED ErrorCode = "PERMISSION_DENIED"

	// ErrorCodeQUOTAEXCEEDED captures enum value "QUOTA_EXCEEDED"
	ErrorCodeQUOTAEXCEEDED ErrorCode = "QUOTA_EXCEEDED"

	// ErrorCodeREQUESTLIMITEXCEEDED captures enum value "REQUEST_LIMIT_EXCEEDED"
	ErrorCodeREQUESTLIMITEXCEEDED ErrorCode = "REQUEST_LIMIT_EXCEEDED"

	// ErrorCodeRESOURCEALREADYEXISTS captures enum value "RESOURCE_ALREADY_EXISTS"
	ErrorCodeRESOURCEALREADYEXISTS ErrorCode = "RESOURCE_ALREADY_EXISTS"

	// ErrorCodeRESOURCEDOESNOTEXIST captures enum value "RESOURCE_DOES_NOT_EXIST"
	ErrorCodeRESOURCEDOESNOTEXIST ErrorCode = "RESOURCE_DOES_NOT_EXIST"

	// ErrorCodeRESOURCELIMITEXCEEDED captures enum value "RESOURCE_LIMIT_EXCEEDED"
	ErrorCodeRESOURCELIMITEXCEEDED ErrorCode = "RESOURCE_LIMIT_EXCEEDED"

	// ErrorCodeTEMPORARILYUNAVAILABLE captures enum value "TEMPORARILY_UNAVAILABLE"
	ErrorCodeTEMPORARILYUNAVAILABLE ErrorCode = "TEMPORARILY_UNAVAILABLE"
)

// for schema
var errorCodeEnum []interface{}

func init() {
	var res []ErrorCode
	if err := json.Unmarshal([]byte(`["BAD_REQUEST","COULD_NOT_ACQUIRE_LOCK","CUSTOMER_UNAUTHORIZED","DIRECTORY_NOT_EMPTY","DIRECTORY_PROTECTED","DRY_RUN_FAILED","ENDPOINT_NOT_FOUND","FEATURE_DISABLED","INTERNAL_ERROR","INVALID_PARAMETER_VALUE","INVALID_STATE","INVALID_STATE_TRANSITION","IO_ERROR","MALFORMED_REQUEST","MAX_BLOCK_SIZE_EXCEEDED","MAX_NOTEBOOK_SIZE_EXCEEDED","MAX_READ_SIZE_EXCEEDED","PERMISSION_DENIED","QUOTA_EXCEEDED","REQUEST_LIMIT_EXCEEDED","RESOURCE_ALREADY_EXISTS","RESOURCE_DOES_NOT_EXIST","RESOURCE_LIMIT_EXCEEDED","TEMPORARILY_UNAVAILABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		errorCodeEnum = append(errorCodeEnum, v)
	}
}

func (m ErrorCode) validateErrorCodeEnum(path, location string, value ErrorCode) error {
	if err := validate.Enum(path, location, value, errorCodeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this error code
func (m ErrorCode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateErrorCodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
