// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AwsAttributes aws attributes
// swagger:model AwsAttributes
type AwsAttributes struct {

	// availability
	Availability AwsAvailability `json:"availability,omitempty"`

	// ebs volume count
	EbsVolumeCount int32 `json:"ebs_volume_count,omitempty"`

	// ebs volume size
	EbsVolumeSize int32 `json:"ebs_volume_size,omitempty"`

	// ebs volume type
	EbsVolumeType EbsVolumeType `json:"ebs_volume_type,omitempty"`

	// first on demand
	FirstOnDemand int32 `json:"first_on_demand,omitempty"`

	// instance profile arn
	InstanceProfileArn string `json:"instance_profile_arn,omitempty"`

	// spot bid price percent
	SpotBidPricePercent int32 `json:"spot_bid_price_percent,omitempty"`

	// zone id
	ZoneID string `json:"zone_id,omitempty"`
}

// Validate validates this aws attributes
func (m *AwsAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvailability(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEbsVolumeType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AwsAttributes) validateAvailability(formats strfmt.Registry) error {

	if swag.IsZero(m.Availability) { // not required
		return nil
	}

	if err := m.Availability.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("availability")
		}
		return err
	}

	return nil
}

func (m *AwsAttributes) validateEbsVolumeType(formats strfmt.Registry) error {

	if swag.IsZero(m.EbsVolumeType) { // not required
		return nil
	}

	if err := m.EbsVolumeType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("ebs_volume_type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AwsAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AwsAttributes) UnmarshalBinary(b []byte) error {
	var res AwsAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
